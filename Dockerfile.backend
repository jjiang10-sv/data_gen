FROM python:3.11-alpine AS builder

WORKDIR /app

# Install only essential build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    libffi-dev \
    curl

# Copy package files
COPY pyproject.toml poetry.lock ./

# Install dependencies
RUN pip install --no-cache-dir poetry \
    && poetry config virtualenvs.create false \
    && poetry install --only=main --no-root --no-interaction

# Production stage
FROM python:3.11-alpine

WORKDIR /app

# Install only runtime dependencies
RUN apk add --no-cache curl

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY src/ ./src/
COPY web/api/ ./web/api/

# Set environment
ENV PYTHONPATH=/app:/app/src
ENV PYTHONUNBUFFERED=1

# Expose port
EXPOSE 8002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

# Start application
CMD ["uvicorn", "web.api.main:app", "--host", "0.0.0.0", "--port", "8002"] 